{"version":3,"sources":["containers/Menu/style.module.css","components/TopBarInfo/style.module.css","components/PlayerShip/style.module.css","components/SpaceShipSelectorItem/style.module.css","components/SpaceShipSelector/style.module.css","components/PlayGround/style.module.css","images/alien.png","components/Enemy/style.module.css","images/rocketone.png","images/rockettwo.png","store/index.js","components/SpaceShipSelectorItem/index.js","constants/objects.js","components/SpaceShipSelector/index.js","containers/Menu/index.js","components/TopBarInfo/index.js","constants/keyCodes.js","components/KeyboardListener/index.js","components/PlayerShip/index.js","components/Enemy/index.js","components/PlayGround/index.js","containers/Game/index.js","containers/ContainersController/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppContext","createContext","spaceshipId","username","screen","score","setSpaceshipId","setUsername","setScreenGame","setScreenMenu","setScrote","AppProvider","setState","setScore","prevState","state","Provider","value","this","props","children","Component","AppConsumer","Consumer","SpaceShipSelectorItem","isSelected","id","isEven","index","onClick","className","classes","style","wrapper","selected","image","even","backgroundImage","url","name","SPACESHIPS","require","SpaceShipSelector","title","list","map","spaceShip","key","Menu","appData","bg","src","alien","alt","input","placeholder","onChange","e","target","type","button","length","alert","TopBarInfo","avatar","label","userName","find","spaceship","keyKodes","ARROW_DOWN","ARROW_UP","ARROW_LEFT","ARROW_RIGHT","ESCAPE","ENTER","SPACE","KeyboardListener","handleKeyDown","event","keyCode","Object","values","KeyCodes","includes","onKeyDown","document","addEventListener","removeEventListener","PlayerShip","spaceShipRef","rotation","rotationTop","rotationDown","rotationLeft","rotationRight","rocketUrl","bottomPosition","leftPosition","ref","getRotationStyle","bottom","left","Alien","PlayGround","playGroundRef","playgroundWidth","playgroundHeight","rocketBottomPosition","rocketLeftPosition","leftAlienPosition","bottomAlienPosition","setColision","setAlienPosition","offsetWidth","offsetHeight","maxX","maxY","getRandomInt","handleGoUp","handleGoDown","handleGoLeft","handleGoRight","goUp","goDown","goLeft","goRight","prevProps","isColision","max","Math","floor","random","x","y","width","height","enemy","isCollide","a","b","Game","ContainersController","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.57008f10.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__Vwj0A\",\"bg\":\"style_bg__LscuR\",\"title\":\"style_title__wc0QF\",\"alien\":\"style_alien__267fJ\",\"input\":\"style_input__NDSgW\",\"button\":\"style_button__3Iiy2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__3nIS9\",\"avatar\":\"style_avatar__23FnO\",\"label\":\"style_label__36Vzg\",\"userName\":\"style_userName__2Hqz6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spaceship\":\"style_spaceship__1ZZLX\",\"rotationLeft\":\"style_rotationLeft__3gF1i\",\"rotationRight\":\"style_rotationRight__3VJB8\",\"rotationDown\":\"style_rotationDown__IVUuP\",\"rotationUp\":\"style_rotationUp__3iZMw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__2Z6a4\",\"selected\":\"style_selected__ajW3a\",\"image\":\"style_image__1Cx1N\",\"even\":\"style_even__2tlAI\",\"name\":\"style_name__3bAJA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__HAptm\",\"list\":\"style_list__1F3kf\",\"title\":\"style_title__3F17J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__1ntBE\",\"bg\":\"style_bg__3LNYS\"};","module.exports = __webpack_public_path__ + \"static/media/alien.98390e3b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alien\":\"style_alien__1_Rd6\"};","module.exports = __webpack_public_path__ + \"static/media/rocketone.2a5863b5.png\";","module.exports = __webpack_public_path__ + \"static/media/rockettwo.fbb7b056.png\";","import React, { createContext, Component } from 'react';\n\nconst AppContext = createContext({\n  spaceshipId: null,\n  username: '',\n  screen: 'menu',\n  score: 0,\n  setSpaceshipId: () => {},\n  setUsername: () => {},\n  setScreenGame: () => {},\n  setScreenMenu: () => {},\n  setScrote: () => {},\n});\n\nexport class AppProvider extends Component {\n  setUsername = username => {\n    this.setState({username});\n  };\n\n  setSpaceshipId = spaceshipId => {\n    this.setState({spaceshipId});\n  };\n  \n  setScreenGame = () => {\n    this.setState({screen: 'game'});\n  };\n\n  setScreenMenu = () => {\n    this.setState({screen: 'menu'});\n  };\n\n  setScore = () => {\n    this.setState(prevState => ({\n      score: prevState.score + 1\n    }));\n  };\n\n  state = {\n    spaceshipId: null,\n    username: '',\n    screen: 'menu',\n    score: 0,\n    setSpaceshipId: this.setSpaceshipId,\n    setUsername: this.setUsername,\n    setScreenGame: this.setScreenGame,\n    setScreenMenu: this.setScreenMenu,\n    setScore: this.setScore,\n  };\n\n  render() {\n    return (\n      <AppContext.Provider value={this.state}>\n        {this.props.children}\n      </AppContext.Provider>\n    );\n  }\n}\n\nexport const AppConsumer = AppContext.Consumer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './style.module.css';\nimport { AppConsumer } from '../../store';\n\nimport * as classes from 'react-style-classes';\n\nconst SpaceShipSelectorItem = ({...props}) => (\n    <AppConsumer>\n        {value => {\n            const isSelected = props.id === value.spaceshipId;\n            const isEven =  props.index % 2 === 0;\n            \n            return (\n                <div\n                    onClick={() => value.setSpaceshipId(props.id)}\n                    className={classes(style.wrapper, isSelected && style.selected)}\n                >\n                    <div\n                        className={classes(style.image, isEven && style.even)}\n                        style={{backgroundImage: `url(${props.url})`}}\n                    />\n                    <span className={style.name}>\n                        {props.name}\n                    </span>\n                </div>\n            );\n        }}\n    </AppConsumer>\n    \n);\n\nSpaceShipSelectorItem.propTypes = {\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    index: PropTypes.number.isRequired,\n};\n\nexport default SpaceShipSelectorItem;","export const SPACESHIPS = [\n    {id: 1, url: require('../images/rocketone.png'), name: 'Rocket APOLLO'},\n    {id: 2, url: require('../images/rockettwo.png'), name: 'Rocket SATURN'},\n];","import React from 'react';\nimport style from './style.module.css';\nimport SpaceShipSelectorItem from '../SpaceShipSelectorItem';\nimport { SPACESHIPS } from '../../constants/objects';\n\nconst SpaceShipSelector = () => {\n\n    return (\n        <div className={style.wrapper}>\n            <span className={style.title}>Select your spaceship</span>\n            <div className={style.list}>\n                {SPACESHIPS.map((spaceShip, index) => (\n                    <SpaceShipSelectorItem\n                        key={spaceShip.id}\n                        id={spaceShip.id}\n                        url={spaceShip.url}\n                        name={spaceShip.name}\n                        index={index}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default SpaceShipSelector;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './style.module.css';\nimport SpaceShipSelector from '../../components/SpaceShipSelector';\n\nconst Menu = ({appData}) => {\n    const onStart = () => {\n        if (appData.spaceshipId === null) {\n            alert(\"Please, select spaceship!\");\n            return;\n        }\n\n        if (appData.username.length === 0) {\n            alert(\"Please, insert your nickname!\");\n            return;\n        }\n\n        appData.setScreenGame();\n    }\n\n    return (\n        <div className={style.wrapper}>\n            <div className={style.bg} />\n            <span className={style.title}>\n                Catch the Alien\n                <img src={require(\"../../images/alien.png\")} className={style.alien} alt=\"Alien\" />\n            </span>\n            <SpaceShipSelector />\n            <input\n                className={style.input}\n                placeholder=\"Your nickname\"\n                onChange={e => appData.setUsername(e.target.value)}\n            />\n            <button\n                type=\"button\"\n                className={style.button}\n                onClick={onStart}\n            >\n                START!\n            </button>\n        </div>\n    );\n};\n\nMenu.propTypes = {\n    appData: PropTypes.object.isRequired,\n};\n\nexport default Menu;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './style.module.css';\nimport { SPACESHIPS } from '../../constants/objects';\n\nconst TopBarInfo = ({username, spaceshipId}) => (\n    <div className={style.wrapper}>\n        <div className={style.avatar} />\n        <span className={style.label}>\n            COSMONAUT:\n            <span className={style.userName}>\n                {username}\n            </span>\n        </span>\n        <span className={style.label}>\n            SPACESHIP:\n            <span className={style.userName}>\n                {SPACESHIPS.find(spaceship => spaceship.id === spaceshipId).name}\n            </span>\n        </span>\n    </div>\n);\n\nTopBarInfo.propTypes = {\n    username: PropTypes.string.isRequired,\n    spaceshipId: PropTypes.number.isRequired,\n};\n\nexport default TopBarInfo;","const keyKodes = {\n    ARROW_DOWN: 40,\n    ARROW_UP: 38,\n    ARROW_LEFT: 37,\n    ARROW_RIGHT: 39,\n    ESCAPE: 27,\n    ENTER: 13,\n    SPACE: 32,\n};\n\nexport default keyKodes;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { KeyCodes } from '../../constants';\n\nexport default class KeyboardListener extends Component {\n\n    static propTypes = {\n        onKeyDown: PropTypes.func.isRequired,\n    };\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        const {keyCode} = event;\n        const allowedKeyCodes = Object.values(KeyCodes);\n\n        if (allowedKeyCodes.includes(keyCode)) {\n            this.props.onKeyDown(keyCode);\n        }\n        \n        return;\n    };\n\n    render() {\n        return this.props.children;\n    }\n\n}","import React, { Component } from 'react';\nimport style from './style.module.css';\n\nimport * as classes from 'react-style-classes';\n\nexport default class PlayerShip extends Component {\n\n    spaceShipRef = null;\n    rotation = 'top';\n\n    goUp() {\n        this.rotation = 'top';\n    };\n\n    goDown() {\n        this.rotation = 'down';\n    };\n\n    goLeft() {\n        this.rotation = 'left';\n    };\n\n    goRight() {\n        this.rotation = 'right';\n    }\n\n    getRotationStyle() {\n        switch(this.rotation) {\n            case 'top':\n                return style.rotationTop;\n            case 'down':\n                return style.rotationDown;\n            case 'left':\n                return style.rotationLeft;\n            case 'right':\n                return style.rotationRight;\n            default:\n                return style.rotationTop;\n        }\n    }\n\n    render() {\n        const {rocketUrl, bottomPosition, leftPosition} = this.props;\n\n        return (\n            <div\n                ref={ref => this.spaceShipRef = ref}\n                className={classes(style.spaceship, this.getRotationStyle())}\n                style={{\n                    backgroundImage: `url(${rocketUrl})`,\n                    bottom: bottomPosition,\n                    left: leftPosition,\n                }}\n            />\n        )\n    }\n};","import React, { Component } from 'react';\nimport style from './style.module.css';\n\nexport default class Alien extends Component {\n\n    render() {\n        const {bottomPosition, leftPosition} = this.props;\n\n        return (\n            <div\n                className={style.alien}\n                style={{\n                    backgroundImage: `url(${require('../../images/alien.png')})`,\n                    bottom: bottomPosition,\n                    left: leftPosition,\n                }}\n            />\n        )\n    }\n};","import React, { Component } from 'react';\nimport style from './style.module.css';\nimport KeyboardListener from '../KeyboardListener';\nimport PlayerShip from '../PlayerShip';\nimport { SPACESHIPS } from '../../constants/objects';\nimport { KeyCodes } from '../../constants';\nimport Alien from '../Enemy';\n\nexport default class PlayGround extends Component {\n\n    spaceShipRef = null;\n    playGroundRef = null;\n\n    playgroundWidth = 0;\n    playgroundHeight = 0;\n\n    state = {\n        rocketBottomPosition: 0,\n        rocketLeftPosition: 0,\n        leftAlienPosition: 150,\n        bottomAlienPosition: 150,\n    };\n\n    componentDidMount() {\n        if (this.playGroundRef !== null) {\n            this.playgroundWidth = this.playGroundRef.offsetWidth;\n            this.playgroundHeight = this.playGroundRef.offsetHeight;\n            this.setState({\n                rocketBottomPosition: 10,\n                rocketLeftPosition: this.playgroundWidth / 2 - 45,\n            });\n            this.setAlienPosition(this.playGroundRef.offsetWidth, this.playGroundRef.offsetHeight);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        this.isColision();\n    }\n\n    getRandomInt(max) {\n        return Math.floor(Math.random() * Math.floor(max));\n    }\n\n    isColision() {\n        const {rocketLeftPosition, rocketBottomPosition, leftAlienPosition, bottomAlienPosition} = this.state;\n\n        const spaceship = {x: rocketLeftPosition, y: rocketBottomPosition, width: 90, height: 175};\n        const enemy = {x: leftAlienPosition, y: bottomAlienPosition, width: 100, height: 100};\n\n        if (this.isCollide(spaceship, enemy)) {\n            this.setColision();\n        }\n    }\n\n    isCollide(a, b) {\n        return !(\n            ((a.y + a.height) < (b.y)) ||\n            (a.y > (b.y + b.height)) ||\n            ((a.x + a.width) < b.x) ||\n            (a.x > (b.x + b.width))\n        );\n    }\n\n    setColision = () => {\n        this.setAlienPosition(this.playGroundRef.offsetWidth, this.playGroundRef.offsetHeight);\n    }\n\n    setAlienPosition = (maxX, maxY) => {\n        this.setState({\n            leftAlienPosition:this.getRandomInt(maxX - 100),\n            bottomAlienPosition: this.getRandomInt(maxY - 100),\n        });\n    };\n    \n    handleKeyDown = keyCode => {\n        // eslint-disable-next-line default-case\n        switch(keyCode) {\n            case KeyCodes.ARROW_UP:\n                this.handleGoUp();\n                break;\n            case KeyCodes.ARROW_DOWN:\n                this.handleGoDown();\n                break;\n            case KeyCodes.ARROW_LEFT:\n                this.handleGoLeft();\n                break;\n            case KeyCodes.ARROW_RIGHT:\n                this.handleGoRight();\n                break;\n        }\n    };\n\n    handleGoUp = () => {\n        this.spaceShipRef.goUp();\n        this.setState(prevState => {\n            if (prevState.rocketBottomPosition + 180 > this.playgroundHeight) {\n                return;\n            }\n\n            return {rocketBottomPosition: prevState.rocketBottomPosition + 15};\n        });\n    };\n\n    handleGoDown = () => {\n        this.spaceShipRef.goDown();\n        this.setState(prevState => {\n            if (prevState.rocketBottomPosition <= 0) {\n                return;\n            }\n\n            return {rocketBottomPosition: prevState.rocketBottomPosition - 15};\n        });\n    };\n\n    handleGoLeft = () => {\n        this.spaceShipRef.goLeft();\n        this.setState(prevState => {\n            if (prevState.rocketLeftPosition <= 20) {\n                return;\n            }\n\n            return {rocketLeftPosition: prevState.rocketLeftPosition - 15};\n        });\n    };\n\n    handleGoRight = () => {\n        this.spaceShipRef.goRight();        \n        this.setState(prevState => {\n            if (prevState.rocketLeftPosition + 160 > this.playgroundWidth) {\n                return;\n            }\n\n            return {rocketLeftPosition: prevState.rocketLeftPosition + 15};\n        });\n    };\n\n    render() {\n        const {spaceshipId} = this.props;\n        const {rocketLeftPosition, rocketBottomPosition, leftAlienPosition, bottomAlienPosition} = this.state;\n\n        return (\n            <KeyboardListener\n                onKeyDown={this.handleKeyDown}\n            >\n                <div className={style.wrapper} ref={ref => this.playGroundRef = ref}>\n                    <div className={style.bg} />\n                    <Alien\n                        leftPosition={leftAlienPosition}\n                        bottomPosition={bottomAlienPosition}\n                    />\n                    <PlayerShip\n                        ref={ref => this.spaceShipRef = ref}\n                        bottomPosition={rocketBottomPosition}\n                        leftPosition={rocketLeftPosition}\n                        rocketUrl={SPACESHIPS.find(spaceship => spaceship.id === spaceshipId).url}\n                    />\n                </div>\n            </KeyboardListener>\n        )\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TopBarInfo from '../../components/TopBarInfo';\nimport PlayGround from '../../components/PlayGround';\n\nconst Game = ({appData}) => {\n\n    return (\n        <div style={{height: '100%'}}>\n            <TopBarInfo\n                username={appData.username}\n                spaceshipId={appData.spaceshipId}\n            />\n            <PlayGround\n                spaceshipId={appData.spaceshipId}\n            /> \n        </div>\n    );\n};\n\nGame.propTypes = {\n    appData: PropTypes.object.isRequired,\n};\n\nexport default Game;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Menu from '../Menu';\nimport Game from '../Game';\n\nconst ContainersController = ({appData}) => {\n    if (appData.screen === 'game') {\n        return (\n            <Game appData={appData} />\n        );\n    }\n    \n    return (\n        <Menu appData={appData} />\n    )\n};\n\nContainersController.propTypes = {\n    appData: PropTypes.object.isRequired,\n};\n\nexport default ContainersController;","import React from 'react';\nimport {AppConsumer} from './store';\nimport ContainersController from './containers/ContainersController';\n\nconst App = () => (\n  <div className=\"container\">\n    <AppConsumer>\n      {value => (\n        <ContainersController appData={value} />\n      )}\n    </AppConsumer>\n  </div>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { AppProvider } from './store';\n\nconst Application = () => (\n    <AppProvider>\n        <App />\n    </AppProvider>\n);\n\nReactDOM.render(<Application />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}